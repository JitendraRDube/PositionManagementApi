// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using PositionMgmt.Domain.Models;

namespace PositionMgmt.Infrastructure.Models;

public partial class PositionMgmtDBContext : DbContext
{
    public PositionMgmtDBContext(DbContextOptions<PositionMgmtDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ActionMaster> ActionMasters { get; set; }

    public virtual DbSet<SecurityMaster> SecurityMasters { get; set; }

    public virtual DbSet<SecurityPrice> SecurityPrices { get; set; }

    public virtual DbSet<Transaction> Transactions { get; set; }

    public virtual DbSet<TransactionTypeMaster> TransactionTypeMasters { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ActionMaster>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ActionMaster");

            entity.Property(e => e.ActionType)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<SecurityMaster>(entity =>
        {
            entity.ToTable("SecurityMaster");

            entity.Property(e => e.SecurityCode)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.SecurityName)
                .HasMaxLength(200)
                .IsUnicode(false);
        });

        modelBuilder.Entity<SecurityPrice>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_SecurityPriceId")
                .IsClustered(false);

            entity.ToTable("SecurityPrice");

            entity.Property(e => e.CreationDate).HasColumnType("datetime");
            entity.Property(e => e.ModifyDate).HasColumnType("datetime");
            entity.Property(e => e.Price).HasColumnType("decimal(18, 6)");

            entity.HasOne(d => d.Security).WithMany(p => p.SecurityPrices)
                .HasForeignKey(d => d.SecurityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SecurityPrice_SecurityMaster");
        });

        modelBuilder.Entity<Transaction>(entity =>
        {
            entity.HasKey(e => e.TransactionId).HasName("PK_TradeHistory");

            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.ModifyDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<TransactionTypeMaster>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TransactionTypeMaster");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.TransactionType)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}